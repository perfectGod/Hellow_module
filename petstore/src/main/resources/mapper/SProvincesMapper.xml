<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nf147.dao.SProvincesMapper">
  <resultMap id="BaseResultMap" type="com.nf147.entity.SProvinces">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="cityName" jdbcType="VARCHAR" property="cityname" />
    <result column="parentId" jdbcType="INTEGER" property="parentid" />
    <result column="shortName" jdbcType="VARCHAR" property="shortname" />
    <result column="depth" jdbcType="INTEGER" property="depth" />
    <result column="cityCode" jdbcType="VARCHAR" property="citycode" />
    <result column="zipCode" jdbcType="VARCHAR" property="zipcode" />
    <result column="mergerName" jdbcType="VARCHAR" property="mergername" />
    <result column="longitude" jdbcType="VARCHAR" property="longitude" />
    <result column="latitude" jdbcType="VARCHAR" property="latitude" />
    <result column="pinyin" jdbcType="VARCHAR" property="pinyin" />
    <result column="isUse" jdbcType="INTEGER" property="isuse" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, cityName, parentId, shortName, depth, cityCode, zipCode, mergerName, longitude, 
    latitude, pinyin, isUse
  </sql>
  <select id="selectByExample" parameterType="com.nf147.entity.SProvincesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from s_provinces
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.nf147.entity.SProvincesExample">
    delete from s_provinces
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nf147.entity.SProvinces">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into s_provinces (id, cityName, parentId, 
      shortName, depth, cityCode, 
      zipCode, mergerName, longitude, 
      latitude, pinyin, isUse
      )
    values (#{id,jdbcType=INTEGER}, #{cityname,jdbcType=VARCHAR}, #{parentid,jdbcType=INTEGER}, 
      #{shortname,jdbcType=VARCHAR}, #{depth,jdbcType=INTEGER}, #{citycode,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{mergername,jdbcType=VARCHAR}, #{longitude,jdbcType=VARCHAR}, 
      #{latitude,jdbcType=VARCHAR}, #{pinyin,jdbcType=VARCHAR}, #{isuse,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.nf147.entity.SProvinces">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into s_provinces
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="cityname != null">
        cityName,
      </if>
      <if test="parentid != null">
        parentId,
      </if>
      <if test="shortname != null">
        shortName,
      </if>
      <if test="depth != null">
        depth,
      </if>
      <if test="citycode != null">
        cityCode,
      </if>
      <if test="zipcode != null">
        zipCode,
      </if>
      <if test="mergername != null">
        mergerName,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="pinyin != null">
        pinyin,
      </if>
      <if test="isuse != null">
        isUse,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=INTEGER},
      <if test="cityname != null">
        #{cityname,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null">
        #{parentid,jdbcType=INTEGER},
      </if>
      <if test="shortname != null">
        #{shortname,jdbcType=VARCHAR},
      </if>
      <if test="depth != null">
        #{depth,jdbcType=INTEGER},
      </if>
      <if test="citycode != null">
        #{citycode,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="mergername != null">
        #{mergername,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="pinyin != null">
        #{pinyin,jdbcType=VARCHAR},
      </if>
      <if test="isuse != null">
        #{isuse,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nf147.entity.SProvincesExample" resultType="java.lang.Long">
    select count(*) from s_provinces
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update s_provinces
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cityname != null">
        cityName = #{record.cityname,jdbcType=VARCHAR},
      </if>
      <if test="record.parentid != null">
        parentId = #{record.parentid,jdbcType=INTEGER},
      </if>
      <if test="record.shortname != null">
        shortName = #{record.shortname,jdbcType=VARCHAR},
      </if>
      <if test="record.depth != null">
        depth = #{record.depth,jdbcType=INTEGER},
      </if>
      <if test="record.citycode != null">
        cityCode = #{record.citycode,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        zipCode = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.mergername != null">
        mergerName = #{record.mergername,jdbcType=VARCHAR},
      </if>
      <if test="record.longitude != null">
        longitude = #{record.longitude,jdbcType=VARCHAR},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=VARCHAR},
      </if>
      <if test="record.pinyin != null">
        pinyin = #{record.pinyin,jdbcType=VARCHAR},
      </if>
      <if test="record.isuse != null">
        isUse = #{record.isuse,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update s_provinces
    set id = #{record.id,jdbcType=INTEGER},
      cityName = #{record.cityname,jdbcType=VARCHAR},
      parentId = #{record.parentid,jdbcType=INTEGER},
      shortName = #{record.shortname,jdbcType=VARCHAR},
      depth = #{record.depth,jdbcType=INTEGER},
      cityCode = #{record.citycode,jdbcType=VARCHAR},
      zipCode = #{record.zipcode,jdbcType=VARCHAR},
      mergerName = #{record.mergername,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=VARCHAR},
      latitude = #{record.latitude,jdbcType=VARCHAR},
      pinyin = #{record.pinyin,jdbcType=VARCHAR},
      isUse = #{record.isuse,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>